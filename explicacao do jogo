const totalCasas = 31;
Cria uma constante chamada totalCasas que armazena o n√∫mero total de casas do tabuleiro.

Como √© constante, o valor n√£o muda durante o jogo.

js
Copiar c√≥digo
const tabuleiro = document.getElementById('tabuleiro');
Aqui pegamos o elemento HTML que tem o id "tabuleiro".

Vamos usar essa vari√°vel para colocar as casas do tabuleiro dentro da p√°gina.

js
Copiar c√≥digo
const quadrados = [];
Criamos um array vazio chamado quadrados.

Esse array vai guardar as refer√™ncias (os objetos) de cada casa que criarmos no tabuleiro.

js
Copiar c√≥digo
let posicaoAtual = 0;
let pontuacao = 0;
let jogadasRestantes = 5;
let respostaEsperada = 0;
Essas s√£o vari√°veis que mudam durante o jogo:

posicaoAtual: onde o pe√£o est√° agora (come√ßa na casa 0, que √© a primeira).

pontuacao: os pontos que o jogador tem (come√ßa em zero).

jogadasRestantes: quantas vezes o jogador ainda pode girar o dado (come√ßa com 5).

respostaEsperada: a resposta correta da pergunta atual.

js
Copiar c√≥digo
const perguntas = [
  { pergunta: "7 √ó 8 =", resposta: 56 },
  { pergunta: "45 √∑ 5 =", resposta: 9 },
  // ... (outras perguntas)
  { pergunta: "14 + 6 √ó 2 =", resposta: 40 }
];
Um array com objetos, onde cada objeto representa uma pergunta e sua resposta correta.

A posi√ß√£o do array corresponde √† casa do tabuleiro.

js
Copiar c√≥digo
for (let i = 1; i <= totalCasas; i++) {
  const quadrado = document.createElement('div');
  quadrado.classList.add('quadrado');
  quadrado.innerText = i;
  tabuleiro.appendChild(quadrado);
  quadrados.push(quadrado);
}
Loop que roda de 1 at√© 31 (totalCasas).

Para cada n√∫mero:

Cria uma nova div (uma casa).

D√° a ela a classe "quadrado" para estilizar (no CSS).

Coloca o n√∫mero da casa como texto dentro dela.

Adiciona essa casa ao elemento tabuleiro no HTML (para aparecer na p√°gina).

Guarda essa casa no array quadrados.

js
Copiar c√≥digo
const peao = document.createElement('div');
peao.classList.add('peao');
quadrados[posicaoAtual].appendChild(peao);
Cria o pe√£o do jogo como uma div com a classe "peao".

Coloca o pe√£o dentro da casa que est√° na posi√ß√£o atual (inicialmente, a primeira casa).

Fun√ß√£o gerarNumero
js
Copiar c√≥digo
function gerarNumero() {
  if (jogadasRestantes <= 0) return;

  const n = Math.floor(Math.random() * 6) + 1;
  document.getElementById('numero').innerText = n;
  moverPeao(n);
  jogadasRestantes--;
  atualizarStatus();
}
Essa fun√ß√£o √© chamada quando o jogador clica no bot√£o "Girar Dado".

Primeiro, verifica se ainda tem jogadas restantes; se n√£o tiver, n√£o faz nada.

Depois, gera um n√∫mero aleat√≥rio entre 1 e 6 (como um dado de verdade).

Atualiza o n√∫mero mostrado na tela.

Chama a fun√ß√£o moverPeao(n) para mover o pe√£o.

Diminui em 1 o n√∫mero de jogadas restantes.

Atualiza a pontua√ß√£o e as jogadas na tela.

Fun√ß√£o moverPeao
js
Copiar c√≥digo
function moverPeao(valor) {
  quadrados[posicaoAtual].removeChild(peao);
  posicaoAtual = Math.min(posicaoAtual + valor, totalCasas - 1);
  quadrados[posicaoAtual].appendChild(peao);
  mostrarPergunta(posicaoAtual);
}
Recebe um n√∫mero (valor) que indica quantas casas o pe√£o deve andar.

Remove o pe√£o da casa atual.

Calcula a nova posi√ß√£o do pe√£o, somando o valor ao posicaoAtual.

Usa Math.min para garantir que o pe√£o n√£o ultrapasse a √∫ltima casa (31).

Coloca o pe√£o na nova casa.

Chama a fun√ß√£o mostrarPergunta para abrir a pergunta da casa atual.

Fun√ß√£o mostrarPergunta
js
Copiar c√≥digo
function mostrarPergunta(posicao) {
  const modal = document.getElementById('modal');
  const perguntaEl = document.getElementById('pergunta');
  const input = document.getElementById('respostaInput');

  input.value = '';
  perguntaEl.innerText = perguntas[posicao].pergunta;
  respostaEsperada = perguntas[posicao].resposta;
  modal.style.display = 'flex';
  input.focus();
}
Essa fun√ß√£o mostra a janela (modal) com a pergunta da casa onde o pe√£o parou.

Pega o elemento do modal, do texto da pergunta e do input para resposta.

Limpa o campo de resposta (para o jogador digitar de novo).

Atualiza o texto da pergunta para a pergunta da casa atual.

Define respostaEsperada com o valor correto daquela pergunta.

Exibe o modal na tela.

Coloca o cursor no campo de resposta para facilitar a digita√ß√£o.

Fun√ß√£o verificarResposta
js
Copiar c√≥digo
function verificarResposta() {
  const input = document.getElementById('respostaInput');
  const respostaJogador = parseInt(input.value);

  if (respostaJogador === respostaEsperada) {
    pontuacao += respostaEsperada;
    alert(`‚úÖ Correto! Voc√™ ganhou ${respostaEsperada} pontos.`);
  } else {
    alert(`‚ùå Errado. A resposta correta era ${respostaEsperada}.`);
  }

  document.getElementById('modal').style.display = 'none';
  atualizarStatus();

  if (jogadasRestantes === 0) {
    document.getElementById('botaoDado').disabled = true;
    alert("üèÅ Fim de jogo! Sua pontua√ß√£o final foi: " + pontuacao);
  }
}
Essa fun√ß√£o √© chamada quando o jogador clica em "Responder" no modal.

Pega a resposta que o jogador digitou no input.

Converte essa resposta para n√∫mero com parseInt.

Compara a resposta do jogador com a resposta correta (respostaEsperada).

Se for igual, o jogador ganha pontos (a pr√≥pria resposta certa) e aparece uma mensagem de acerto.

Se errar, mostra uma mensagem com a resposta correta.

Fecha o modal.

Atualiza a pontua√ß√£o e jogadas na tela.

Se n√£o tiver mais jogadas restantes, desabilita o bot√£o de girar dado e mostra o resultado final.

Fun√ß√£o atualizarStatus
js
Copiar c√≥digo
function atualizarStatus() {
  document.getElementById('pontuacao').innerText =
    `Pontua√ß√£o: ${pontuacao} | Jogadas restantes: ${jogadasRestantes}`;
}
